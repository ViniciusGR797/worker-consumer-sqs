from pydantic import BaseModel, ConfigDict, Field, PositiveFloat
from typing import Optional


class TransactionSchema(BaseModel):
    transaction_id: str = Field(
        ...,
        description="Unique identifier of the transaction generated by the API"
    )
    payer_id: str = Field(
        ...,
        description="Identifier of the paying user"
    )
    receiver_id: str = Field(
        ...,
        description="Identifier of the receiving user"
    )
    amount: PositiveFloat = Field(
        ...,
        description="Transaction amount (must be positive)"
    )
    currency: str = Field(
        ...,
        description="Currency of the transaction, e.g., 'BRL', 'USD'"
    )
    description: Optional[str] = Field(
        None,
        description="Optional description of the transaction"
    )

    model_config = ConfigDict(
        json_schema_extra={
            "example": {
                "transaction_id": "txn-908765",
                "payer_id": "user-12345",
                "receiver_id": "user-67890",
                "amount": 250.75,
                "currency": "BRL",
                "description": "Donation to project X"
            }
        }
    )
